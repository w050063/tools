---
- import_playbook: create_work_dir.yml

- hosts: all
  remote_user: root
  sudo: yes
  gather_facts: false
  vars:
    - docker_ce_version: docker-ce-18.03.1.ce
  tasks:
  - name: docker old version uninstall
    yum: name={{ item }} state=absent
    with_items:
      - docker 
      - docker-common 
      - docker-selinux 
      - docker-engine
    tags: uninstall_old_docker

  - name: docker-ce tools install
    yum: name={{ item }} state=latest
    with_items:
      - yum-utils 
      - device-mapper-persistent-data 
      - lvm2
      - docker-compose
    tags: install_docker_tools

  - name: docker repo setup
    shell: yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo && \
           yum-config-manager --enable docker-ce-edge && \
           yum-config-manager --enable docker-ce-test
    tags: docker_repo_setup
    # https://download.docker.com/linux/centos/docker-ce.repo


  - name: docker-ce install {{ docker_ce_version }}
    yum: name={{ docker_ce_version }} state=latest
    tags: install_docker_ce

  - name: create {{ item }}
    file:
      path: "{{ item }}"
      mode: 0755
      state: directory
    with_items:
      - "/etc/docker/"
    tags: create_app_work_dir

  - name: rsysc /etc/docker/daemon.json
    copy:
      src: files/docker/daemon.json
      dest: /etc/docker/daemon.json
      owner: root
      group: root
      mode: 0664
    tags: rsync_docker_daemon_config

  - name: make sure a service is running
    systemd: state=started name=docker
    tags: start_service

  - name: enable service and ensure it is not masked
    systemd:
      name: docker
      enabled: yes
      masked: no
    tags: service_boot

  - name: get docker version
    shell: docker version
    register: version
    tags: print_version
  
  - name: print app version
    debug: 
      msg: "{{ item }}"
    with_items:
      - "docker version: {{ version.stdout }}"
    tags: print_version


  handlers:
    - name: restart docker
      service: name=docker enabled=yes state=restarted
      tags: restart_docker
